<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_85303_srtms2.processSRTMS</api_name>
        <client_callable>false</client_callable>
        <description/>
        <name>processSRTMS</name>
        <script><![CDATA[var processSRTMS = Class.create();
processSRTMS.prototype = {
    initialize: function() {
    },
	
	getProcessSRTMS: function(vFullProcess){
		var responseBody = "";
		try {

			var vLastRun =  new GlideDateTime();
			
			var callLog = new logTOsRTMS();

			callLog.setLog(vLastRun,'info','Process','Start');
			
			var grsetting = new GlideRecord('x_85303_srtms2_settings');
			grsetting.get('service','sRTMS2');
			
			//var vDeleteOutdatedRecords = grsetting.delete_outdated_records;
			var vServiceNowSrc = grsetting.servicenow_source;
			//var vAwsSrc = grsetting.aws_source;
			
			var vGraphQLAPIKey = grsetting.graphql_api_key.getDecryptedValue();			
			var vPageSize = grsetting.api_page_size;
			var vModule = grsetting.module;
			var vCreateResource = grsetting.create_missing_resource;
			var vCreateManufacturer = grsetting.create_missing_manufacturer;
			var vCreateModel = grsetting.create_missing_model;
			var vCreateSwDiscModel = grsetting.create_missing_software_discovery_model;
			var vCreateSwInstallation = grsetting.create_missing_software_installation;
			
			
			grsetting.last_run = vLastRun;
			grsetting.status = 'Running';
			grsetting.update();
			
			
			

			//callLog.setLog('','Info','Process sRTMS','Start Connect');
			/*
			var callConnect = new connectTOsRTMS();
			var responseConnect = callConnect.getConnect();
			if(responseConnect != "1")
			{
				responseBody = responseConnect;
				return responseBody;
			}
			*/
			//callLog.setLog('','Info','Process sRTMS','End Connect');
			
			
			if(vFullProcess==true)
			{
				if(vServiceNowSrc)
				{

					//callLog.setLog('','Info','Trigger sRTMS Job','Start Job');
					callLog.setLog(vLastRun,'info','Trigger ServiceNow process','Start');
					
					var vServiceNowDataSource = 'servicenow';
					var vServiceNowURI = gs.getProperty('glide.servlet.uri');
					var vServiceNowLogin = grsetting.servicenow_login;
					var vServiceNowPwd = grsetting.servicenow_password;
					var vServiceNowMode = grsetting.servicenow_connect_mode;
					var vServiceNowPageSizeAPI = grsetting.servicenow_pagesize_api;
					var vServiceNowData = grsetting.servicenow_connect_data;	
					var vServiceNowDeviceList = grsetting.servicenow_device_list_id_name;
					var vServiceNowLastXDevices = grsetting.servicenow_last_x_devices;

					/*
					var trigJobSnow = new triggerJobSnowTOsRTMS();
					var responseTrigJobSnow = trigJobSnow.getTriggerJob();
					if(responseTrigJobSnow != "1")
					{
						responseBody = responseTrigJobSnow;
						return responseBody;
					}
					*/
				}
				/*
				if(vAwsSrc)
				{

					//callLog.setLog('','Info','Trigger sRTMS Job','Start Job');
					var trigJobAWS = new triggerJobAwsTOsRTMS();
					var responseTrigJobAWS = trigJobAWS.getTriggerJob();
					if(responseTrigJobAWS != "1")
					{
						responseBody = responseTrigJobAWS;
						return responseBody;
					}
				}
				
				if(vSnowSrc || vAwsSrc)
				{
					//Saving Source Status
					grsetting.servicenow_source_status = grsetting.servicenow;
					grsetting.aws_source_status = grsetting.aws_source;
					grsetting.update();

					//Check Status
					var statusJobSnow = new statusJobTOsRTMS();
					var responseStatusJobSnow = statusJobSnow.getStatusJob();
					if(responseStatusJobSnow == "2")
					{
						responseBody = responseStatusJobSnow;

						var schStatusSnow = new GlideRecord('sysauto_script');
						schStatusSnow.get('name', 'schedulerJobStatusTOsRTMS');
						schStatusSnow.active=true;
						schStatusSnow.update();

						grsetting.status = 'Activate Scheduler';
						grsetting.update();

						responseBody = "1";
						return responseBody;
					}
					else if(responseStatusJobSnow != "1")
					{
						responseBody = responseStatusJobSnow;
						return responseBody;
					}
				}
				*/
			}
			
			
			callLog.setLog(vLastRun,'info','Pull results from sRTMS','Start');
			
			var callPull = new pullFROMsRTMS();
			var responsePull = callPull.getPull(vLastRun,vGraphQLAPIKey,vPageSize,vModule,vCreateResource,vCreateManufacturer,vCreateModel,vCreateSwDiscModel,vCreateSwInstallation);

			if(responsePull.responseBody != '1')
			{
				responseBody = responsePull.responseBody;
				return responseBody;
			}

			callLog.setLog(vLastRun,'info','Pull results from sRTMS','End');
			
			//Delete Outdated Logs
			callLog.setLog(vLastRun,'info','Delete outdated logs','Start');
			
			var delOutdatedLogs = new deleteOutdatedLogs();
			var responseDelOutdatedLogs = delOutdatedLogs.getDelete(vLastRun);
			
			if(responseDelOutdatedLogs.responseBody != '1')
			{
				responseBody = responseDelOutdatedLogs.responseBody;
				return responseBody;
			}
			
			callLog.setLog(vLastRun,'info','Delete outdated logs','End');
			
			//Completed
			callLog.setLog(vLastRun,'info','Process sRTMS','End');
			
			grsetting.status = "Completed";
			grsetting.update();
			
			responseBody="1";
		}
		catch(ex) {
			var message = ex.getMessage();
			responseBody = ex.getMessage();
		}
		
		return responseBody;
	},
	
    type: 'processSRTMS'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-02-25 21:18:41</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>59d5d73b2f830010281fd5f62799b62e</sys_id>
        <sys_mod_count>31</sys_mod_count>
        <sys_name>processSRTMS</sys_name>
        <sys_package display_value="sRTMS2" source="x_85303_srtms2">fa2aea772f030010281fd5f62799b6a6</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="sRTMS2">fa2aea772f030010281fd5f62799b6a6</sys_scope>
        <sys_update_name>sys_script_include_59d5d73b2f830010281fd5f62799b62e</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-03-16 19:11:17</sys_updated_on>
    </sys_script_include>
</record_update>
